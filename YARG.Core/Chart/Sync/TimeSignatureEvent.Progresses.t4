<#@ template hostspecific="false" language="C#" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".cs" #>
using System;

namespace YARG.Core.Chart
{
    public partial class TimeSignatureChange
    {
<#
var names = new (string name, string doc)[] {
    ("Beat", "beat"),
    ("QuarterNote", "quarter note"),
    ("Measure", "measure"),
};

foreach (var (name, doc) in names)
{
#>
        /// <summary>
        /// Calculates the fractional number of <#= doc #>s that the given tick lies at, relative to this time signature.
        /// </summary>
        public double Get<#= name #>Progress(uint tick, SyncTrack sync)
        {
            CheckTick(tick);
            return (tick - Tick) / (double) GetTicksPer<#= name #>(sync.Resolution);
        }

        /// <summary>
        /// Calculates the whole number of <#= doc #>s that the given tick lies at, relative to this time signature.
        /// </summary>
        public uint Get<#= name #>Count(uint tick, SyncTrack sync)
        {
            CheckTick(tick);
            return (tick - Tick) / GetTicksPer<#= name #>(sync.Resolution);
        }

        /// <summary>
        /// Calculates the percent of a <#= doc #> that the given tick lies at, relative to this time signature.
        /// </summary>
        public double Get<#= name #>Percentage(uint tick, SyncTrack sync)
        {
            CheckTick(tick);
            uint tickRate = GetTicksPer<#= name #>(sync.Resolution);
            return (tick % tickRate) / (double) tickRate;
        }

<#
}
#>
    }
}